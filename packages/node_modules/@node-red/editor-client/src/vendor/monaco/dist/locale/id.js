this.MonacoEnvironment = this.MonacoEnvironment || {}; this.MonacoEnvironment.Locale = {language: 'id', data: {
    "vs/base/browser/ui/actionbar/actionbar": {
        "titleLabel": "{0} ({1})"
    },
    "vs/base/browser/ui/aria/aria": {
        "repeated": "{0} (terjadi lagi)",
        "repeatedNtimes": "{0} (occurred {1} times)"
    },
    "vs/base/browser/ui/findinput/findInput": {
        "defaultLabel": "masukan"
    },
    "vs/base/browser/ui/findinput/findInputCheckboxes": {
        "caseDescription": "Padankan Huruf",
        "wordsDescription": "Padankan Seluruh Kata",
        "regexDescription": "Gunakan Regular Expression"
    },
    "vs/base/browser/ui/findinput/replaceInput": {
        "defaultLabel": "masukan",
        "label.preserveCaseCheckbox": "Preserve Case"
    },
    "vs/base/browser/ui/inputbox/inputBox": {
        "alertErrorMessage": "Kesalahan: {0}",
        "alertWarningMessage": "Peringatan: {0}",
        "alertInfoMessage": "Info: {0}"
    },
    "vs/base/browser/ui/keybindingLabel/keybindingLabel": {
        "unbound": "Unbound"
    },
    "vs/base/browser/ui/list/listWidget": {
        "aria list": "{0}. Gunakan tombol navigasi untuk berpindah."
    },
    "vs/base/browser/ui/menu/menu": {
        "titleLabel": "{0} ({1})"
    },
    "vs/base/browser/ui/tree/abstractTree": {
        "clear": "Clear",
        "disable filter on type": "Disable Filter on Type",
        "enable filter on type": "Enable Filter on Type",
        "empty": "No elements found",
        "found": "Matched {0} out of {1} elements"
    },
    "vs/base/common/errorMessage": {
        "stackTrace.format": "{0}: {1}",
        "nodeExceptionMessage": "Sebuah kesalahan sistem terjadi ({0})",
        "error.defaultMessage": "Terjadi kesalahan yang tidak diketahui. Mohon periksa cacatan untuk rincian lebih lanjut",
        "error.moreErrors": "{0} ({1} total kesalahan)"
    },
    "vs/base/common/keybindingLabels": {
        "ctrlKey": "Ctrl",
        "shiftKey": "Shift",
        "altKey": "Alt",
        "windowsKey": "Windows",
        "superKey": "Super",
        "ctrlKey.long": "Control",
        "shiftKey.long": "Shift",
        "altKey.long": "Alt",
        "cmdKey.long": "Perintah",
        "windowsKey.long": "Windows",
        "superKey.long": "Super"
    },
    "vs/base/common/severity": {
        "sev.error": "Kesalahan",
        "sev.warning": "Peringatan",
        "sev.info": "Info"
    },
    "vs/base/parts/quickinput/browser/quickInput": {
        "quickInput.back": "Back",
        "quickInput.steps": "{0}/{1}",
        "quickInputBox.ariaLabel": "Type to narrow down results.",
        "inputModeEntry": "Press 'Enter' to confirm your input or 'Escape' to cancel",
        "inputModeEntryDescription": "{0} (Press 'Enter' to confirm or 'Escape' to cancel)",
        "quickInput.visibleCount": "{0} Hasil",
        "quickInput.countSelected": "{0} Selected",
        "ok": "OK",
        "custom": "Custom",
        "quickInput.backWithKeybinding": "Back ({0})"
    },
    "vs/editor/browser/controller/coreCommands": {
        "miSelectAll": "&&Select All",
        "selectAll": "Select All",
        "miUndo": "&&Undo",
        "undo": "Undo",
        "miRedo": "&&Redo",
        "redo": "Redo"
    },
    "vs/editor/browser/controller/textAreaHandler": {
        "accessibilityOffAriaLabel": "The editor is not accessible at this time. Press {0} for options."
    },
    "vs/editor/browser/widget/codeEditorWidget": {
        "cursors.maximum": "Jumlah kursor dibatasi hingga {0}."
    },
    "vs/editor/browser/widget/diffEditorWidget": {
        "diff.tooLarge": "Tidak dapat membandingkan berkas karena salah satu berkas terlalu besar."
    },
    "vs/editor/browser/widget/diffReview": {
        "label.close": "Tutup",
        "no_lines_changed": "no lines changed",
        "one_line_changed": "1 line changed",
        "more_lines_changed": "{0} lines changed",
        "header": "Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}",
        "blankLine": "kosong",
        "equalLine": "{0} original line {1} modified line {2}",
        "insertLine": "+ {0} modified line {1}",
        "deleteLine": "- {0} original line {1}",
        "editor.action.diffReview.next": "Pergi ke Perbedaan Selanjutnya",
        "editor.action.diffReview.prev": "Pergi ke Perbedaan Sebelumnya"
    },
    "vs/editor/browser/widget/inlineDiffMargin": {
        "diff.clipboard.copyDeletedLinesContent.label": "Copy deleted lines",
        "diff.clipboard.copyDeletedLinesContent.single.label": "Copy deleted line",
        "diff.clipboard.copyDeletedLineContent.label": "Copy deleted line ({0})",
        "diff.inline.revertChange.label": "Revert this change"
    },
    "vs/editor/common/config/commonEditorConfig": {
        "editorConfigurationTitle": "Editor",
        "tabSize": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
        "insertSpaces": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
        "detectIndentation": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
        "trimAutoWhitespace": "Remove trailing auto inserted whitespace.",
        "largeFileOptimizations": "Special handling for large files to disable certain memory intensive features.",
        "wordBasedSuggestions": "Mengatur apakah penyelesaian harus dihitung berdasarkan kata-kata didalam dokumen.",
        "semanticHighlighting.enabled": "Controls whether the semanticHighlighting is shown for the languages that support it.",
        "stablePeek": "Keep peek editors open even when double clicking their content or when hitting `Escape`.",
        "maxTokenizationLineLength": "Lines above this length will not be tokenized for performance reasons",
        "maxComputationTime": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
        "sideBySide": "Controls whether the diff editor shows the diff side by side or inline.",
        "ignoreTrimWhitespace": "When enabled, the diff editor ignores changes in leading or trailing whitespace.",
        "renderIndicators": "Controls whether the diff editor shows +/- indicators for added/removed changes."
    },
    "vs/editor/common/config/editorOptions": {
        "accessibilitySupport.auto": "Editor akan menggunakan API dari platform untuk mendeteksi apakah pembaca layar tersambung.",
        "accessibilitySupport.on": "Editor akan dioptimisasi untuk penggunaan pembaca layar secara permanen.",
        "accessibilitySupport.off": "Editor tidak akan dioptimisasi untuk penggunaan pembaca layar.",
        "accessibilitySupport": "Mengatur apakah editor akan berjalan pada mode yang dioptimisasi untuk pembaca layar.",
        "comments.insertSpace": "Controls whether a space character is inserted when commenting.",
        "emptySelectionClipboard": "Mengatur apakah menyalin tanpa ada seleksi akan menyalin baris saat ini.",
        "find.seedSearchStringFromSelection": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
        "editor.find.autoFindInSelection.never": "Never turn on Find in selection automatically (default)",
        "editor.find.autoFindInSelection.always": "Always turn on Find in selection automatically",
        "editor.find.autoFindInSelection.multiline": "Turn on Find in selection automatically when multiple lines of content are selected.",
        "find.autoFindInSelection": "Controls whether the find operation is carried out on selected text or the entire file in the editor.",
        "find.globalFindClipboard": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
        "find.addExtraSpaceOnTop": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
        "fontLigatures": "Enables/Disables font ligatures.",
        "fontFeatureSettings": "Explicit font-feature-settings.",
        "fontLigaturesGeneral": "Configures font ligatures or font features.",
        "fontSize": "Mengatur ukuran font dalam piksel.",
        "editor.gotoLocation.multiple.peek": "Show peek view of the results (default)",
        "editor.gotoLocation.multiple.gotoAndPeek": "Go to the primary result and show a peek view",
        "editor.gotoLocation.multiple.goto": "Go to the primary result and enable peek-less navigation to others",
        "editor.gotoLocation.multiple.deprecated": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
        "editor.editor.gotoLocation.multipleDefinitions": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
        "editor.editor.gotoLocation.multipleTypeDefinitions": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
        "editor.editor.gotoLocation.multipleDeclarations": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
        "editor.editor.gotoLocation.multipleImplemenattions": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
        "editor.editor.gotoLocation.multipleReferences": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
        "alternativeDefinitionCommand": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
        "alternativeTypeDefinitionCommand": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
        "alternativeDeclarationCommand": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
        "alternativeImplementationCommand": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
        "alternativeReferenceCommand": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
        "hover.enabled": "Controls whether the hover is shown.",
        "hover.delay": "Controls the delay in milliseconds after which the hover is shown.",
        "hover.sticky": "Controls whether the hover should remain visible when mouse is moved over it.",
        "codeActions": "Enables the code action lightbulb in the editor.",
        "lineHeight": "Controls the line height. Use 0 to compute the line height from the font size.",
        "minimap.enabled": "Controls whether the minimap is shown.",
        "minimap.size.proportional": "The minimap has the same size as the editor contents (and might scroll).",
        "minimap.size.fill": "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
        "minimap.size.fit": "The minimap will shrink as necessary to never be larger than the editor (no scrolling).",
        "minimap.size": "Controls the size of the minimap.",
        "minimap.side": "Mengontrol sisi mana yang digunakan untuk menampilkan minimap.",
        "minimap.showSlider": "Controls when the minimap slider is shown.",
        "minimap.scale": "Scale of content drawn in the minimap: 1, 2 or 3.",
        "minimap.renderCharacters": "Render the actual characters on a line as opposed to color blocks.",
        "minimap.maxColumn": "Limit the width of the minimap to render at most a certain number of columns.",
        "padding.top": "Controls the amount of space between the top edge of the editor and the first line.",
        "padding.bottom": "Controls the amount of space between the bottom edge of the editor and the last line.",
        "parameterHints.enabled": "Enables a pop-up that shows parameter documentation and type information as you type.",
        "parameterHints.cycle": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
        "quickSuggestions.strings": "Aktifkan saran cepat dalam string.",
        "quickSuggestions.comments": "Aktifkan saran cepat di dalam komentar.",
        "quickSuggestions.other": "Aktifkan saran cepat di luar string dan komentar.",
        "quickSuggestions": "Controls whether suggestions should automatically show up while typing.",
        "lineNumbers.off": "Nomor baris tidak ditampilkan.",
        "lineNumbers.on": "Nomor baris ditampilkan sebagai angka mutlak.",
        "lineNumbers.relative": "Nomor baris ditampilkan sebagai jarak dari baris ke posisi kursor.",
        "lineNumbers.interval": "Nomor baris ditampilkan setiap 10 baris.",
        "lineNumbers": "Mengatur tampilan pada nomor baris.",
        "rulers.size": "Number of monospace characters at which this editor ruler will render.",
        "rulers.color": "Color of this editor ruler.",
        "rulers": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
        "suggest.insertMode.insert": "Insert suggestion without overwriting text right of the cursor.",
        "suggest.insertMode.replace": "Insert suggestion and overwrite text right of the cursor.",
        "suggest.insertMode": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
        "suggest.filterGraceful": "Controls whether filtering and sorting suggestions accounts for small typos.",
        "suggest.localityBonus": "Controls whether sorting favours words that appear close to the cursor.",
        "suggest.shareSuggestSelections": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
        "suggest.snippetsPreventQuickSuggestions": "Controls whether an active snippet prevents quick suggestions.",
        "suggest.showIcons": "Controls whether to show or hide icons in suggestions.",
        "suggest.maxVisibleSuggestions": "Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).",
        "deprecated": "Setelan ini tidak digunakan lagi, gunakan setelan terpisah seperti 'editor.suggest.showKeywords' atau 'editor.suggest.showSnippets' sebagai gantinya.",
        "editor.suggest.showMethods": "When enabled IntelliSense shows `method`-suggestions.",
        "editor.suggest.showFunctions": "When enabled IntelliSense shows `function`-suggestions.",
        "editor.suggest.showConstructors": "When enabled IntelliSense shows `constructor`-suggestions.",
        "editor.suggest.showFields": "When enabled IntelliSense shows `field`-suggestions.",
        "editor.suggest.showVariables": "When enabled IntelliSense shows `variable`-suggestions.",
        "editor.suggest.showClasss": "When enabled IntelliSense shows `class`-suggestions.",
        "editor.suggest.showStructs": "When enabled IntelliSense shows `struct`-suggestions.",
        "editor.suggest.showInterfaces": "When enabled IntelliSense shows `interface`-suggestions.",
        "editor.suggest.showModules": "When enabled IntelliSense shows `module`-suggestions.",
        "editor.suggest.showPropertys": "When enabled IntelliSense shows `property`-suggestions.",
        "editor.suggest.showEvents": "When enabled IntelliSense shows `event`-suggestions.",
        "editor.suggest.showOperators": "When enabled IntelliSense shows `operator`-suggestions.",
        "editor.suggest.showUnits": "When enabled IntelliSense shows `unit`-suggestions.",
        "editor.suggest.showValues": "When enabled IntelliSense shows `value`-suggestions.",
        "editor.suggest.showConstants": "When enabled IntelliSense shows `constant`-suggestions.",
        "editor.suggest.showEnums": "When enabled IntelliSense shows `enum`-suggestions.",
        "editor.suggest.showEnumMembers": "When enabled IntelliSense shows `enumMember`-suggestions.",
        "editor.suggest.showKeywords": "When enabled IntelliSense shows `keyword`-suggestions.",
        "editor.suggest.showTexts": "When enabled IntelliSense shows `text`-suggestions.",
        "editor.suggest.showColors": "When enabled IntelliSense shows `color`-suggestions.",
        "editor.suggest.showFiles": "When enabled IntelliSense shows `file`-suggestions.",
        "editor.suggest.showReferences": "When enabled IntelliSense shows `reference`-suggestions.",
        "editor.suggest.showCustomcolors": "When enabled IntelliSense shows `customcolor`-suggestions.",
        "editor.suggest.showFolders": "When enabled IntelliSense shows `folder`-suggestions.",
        "editor.suggest.showTypeParameters": "Ketika diaktifkan IntelliSense menunjukkan 'typeParameter'-saran.",
        "editor.suggest.showSnippets": "When enabled IntelliSense shows `snippet`-suggestions.",
        "editor.suggest.showUsers": "When enabled IntelliSense shows `user`-suggestions.",
        "editor.suggest.showIssues": "When enabled IntelliSense shows `issues`-suggestions.",
        "editor.suggest.statusBar.visible": "Controls the visibility of the status bar at the bottom of the suggest widget.",
        "acceptSuggestionOnCommitCharacter": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
        "acceptSuggestionOnEnterSmart": "Only accept a suggestion with `Enter` when it makes a textual change.",
        "acceptSuggestionOnEnter": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
        "accessibilityPageSize": "Controls the number of lines in the editor that can be read out by a screen reader. Warning: this has a performance implication for numbers larger than the default.",
        "editorViewAccessibleLabel": "Isi editor",
        "editor.autoClosingBrackets.languageDefined": "Use language configurations to determine when to autoclose brackets.",
        "editor.autoClosingBrackets.beforeWhitespace": "Autoclose brackets only when the cursor is to the left of whitespace.",
        "autoClosingBrackets": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
        "editor.autoClosingOvertype.auto": "Type over closing quotes or brackets only if they were automatically inserted.",
        "autoClosingOvertype": "Controls whether the editor should type over closing quotes or brackets.",
        "editor.autoClosingQuotes.languageDefined": "Use language configurations to determine when to autoclose quotes.",
        "editor.autoClosingQuotes.beforeWhitespace": "Autoclose quotes only when the cursor is to the left of whitespace.",
        "autoClosingQuotes": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
        "editor.autoIndent.none": "The editor will not insert indentation automatically.",
        "editor.autoIndent.keep": "The editor will keep the current line's indentation.",
        "editor.autoIndent.brackets": "The editor will keep the current line's indentation and honor language defined brackets.",
        "editor.autoIndent.advanced": "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
        "editor.autoIndent.full": "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.",
        "autoIndent": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
        "editor.autoSurround.languageDefined": "Use language configurations to determine when to automatically surround selections.",
        "editor.autoSurround.quotes": "Surround with quotes but not brackets.",
        "editor.autoSurround.brackets": "Surround with brackets but not quotes.",
        "autoSurround": "Controls whether the editor should automatically surround selections.",
        "codeLens": "Controls whether the editor shows CodeLens.",
        "colorDecorators": "Controls whether the editor should render the inline color decorators and color picker.",
        "columnSelection": "Enable that the selection with the mouse and keys is doing column selection.",
        "copyWithSyntaxHighlighting": "Controls whether syntax highlighting should be copied into the clipboard.",
        "cursorBlinking": "Control the cursor animation style.",
        "cursorSmoothCaretAnimation": "Controls whether the smooth caret animation should be enabled.",
        "cursorStyle": "Controls the cursor style.",
        "cursorSurroundingLines": "Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or `scrollOffset` in some other editors.",
        "cursorSurroundingLinesStyle.default": "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
        "cursorSurroundingLinesStyle.all": "`cursorSurroundingLines` is enforced always.",
        "cursorSurroundingLinesStyle": "Controls when `cursorSurroundingLines` should be enforced.",
        "cursorWidth": "Mengatur lebar kursor ketika `#editor.cursorStyle#` diset ke `baris`.",
        "dragAndDrop": "Controls whether the editor should allow moving selections via drag and drop.",
        "fastScrollSensitivity": "Scrolling speed multiplier when pressing `Alt`.",
        "folding": "Controls whether the editor has code folding enabled.",
        "foldingStrategy.auto": "Use a language-specific folding strategy if available, else the indentation-based one.",
        "foldingStrategy.indentation": "Use the indentation-based folding strategy.",
        "foldingStrategy": "Controls the strategy for computing folding ranges.",
        "foldingHighlight": "Controls whether the editor should highlight folded ranges.",
        "unfoldOnClickAfterEndOfLine": "Controls whether clicking on the empty content after a folded line will unfold the line.",
        "fontFamily": "Mengatur jenis font.",
        "fontWeight": "Mengatur ketebalan font.",
        "formatOnPaste": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
        "formatOnType": "Controls whether the editor should automatically format the line after typing.",
        "glyphMargin": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
        "hideCursorInOverviewRuler": "Controls whether the cursor should be hidden in the overview ruler.",
        "highlightActiveIndentGuide": "Controls whether the editor should highlight the active indent guide.",
        "letterSpacing": "Mengatur jarak antarkarakter dalam piksel.",
        "links": "Controls whether the editor should detect links and make them clickable.",
        "matchBrackets": "Highlight matching brackets.",
        "mouseWheelScrollSensitivity": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
        "mouseWheelZoom": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
        "multiCursorMergeOverlapping": "Merge multiple cursors when they are overlapping.",
        "multiCursorModifier.ctrlCmd": "Petakan ke `Control` pada Windows dan Linux, dan `Command` pada macOS.",
        "multiCursorModifier.alt": "Petakan untuk `Alt` pada Windows dan Linux dan untuk `Option` pada macOS.",
        "multiCursorModifier": "The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
        "multiCursorPaste.spread": "Each cursor pastes a single line of the text.",
        "multiCursorPaste.full": "Each cursor pastes the full text.",
        "multiCursorPaste": "Controls pasting when the line count of the pasted text matches the cursor count.",
        "occurrencesHighlight": "Controls whether the editor should highlight semantic symbol occurrences.",
        "overviewRulerBorder": "Controls whether a border should be drawn around the overview ruler.",
        "peekWidgetDefaultFocus.tree": "Focus the tree when opening peek",
        "peekWidgetDefaultFocus.editor": "Focus the editor when opening peek",
        "peekWidgetDefaultFocus": "Controls whether to focus the inline editor or the tree in the peek widget.",
        "definitionLinkOpensInPeek": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
        "quickSuggestionsDelay": "Controls the delay in milliseconds after which quick suggestions will show up.",
        "renameOnType": "Controls whether the editor auto renames on type.",
        "renderControlCharacters": "Controls whether the editor should render control characters.",
        "renderIndentGuides": "Controls whether the editor should render indent guides.",
        "renderFinalNewline": "Render last line number when the file ends with a newline.",
        "renderLineHighlight.all": "Menyoroti gutter dan baris saat ini.",
        "renderLineHighlight": "Controls how the editor should render the current line highlight.",
        "renderLineHighlightOnlyWhenFocus": "Controls if the editor should render the current line highlight only when the editor is focused",
        "renderWhitespace.selection": "Render whitespace characters only on selected text.",
        "renderWhitespace": "Controls how the editor should render whitespace characters.",
        "roundedSelection": "Controls whether selections should have rounded corners.",
        "scrollBeyondLastColumn": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
        "scrollBeyondLastLine": "Controls whether the editor will scroll beyond the last line.",
        "scrollPredominantAxis": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
        "selectionClipboard": "Controls whether the Linux primary clipboard should be supported.",
        "selectionHighlight": "Controls whether the editor should highlight matches similar to the selection.",
        "showFoldingControls.always": "Always show the folding controls.",
        "showFoldingControls.mouseover": "Only show the folding controls when the mouse is over the gutter.",
        "showFoldingControls": "Controls when the folding controls on the gutter are shown.",
        "showUnused": "Controls fading out of unused code.",
        "snippetSuggestions.top": "Tampilkan potongan saran di atas saran lain.",
        "snippetSuggestions.bottom": "Tampilkan potongan saran di bawah saran lain.",
        "snippetSuggestions.inline": "Tampilkan potongan saran dengan saran lain.",
        "snippetSuggestions.none": "Jangan tampilkan cuplikan saran.",
        "snippetSuggestions": "Mengatur apakah potongan saran ditampilkan dengan saran yang lainnya dan bagaimana mereka diurutkan",
        "smoothScrolling": "Controls whether the editor will scroll using an animation.",
        "suggestFontSize": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
        "suggestLineHeight": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.",
        "suggestOnTriggerCharacters": "Controls whether suggestions should automatically show up when typing trigger characters.",
        "suggestSelection.first": "Always select the first suggestion.",
        "suggestSelection.recentlyUsed": "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
        "suggestSelection.recentlyUsedByPrefix": "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
        "suggestSelection": "Controls how suggestions are pre-selected when showing the suggest list.",
        "tabCompletion.on": "Tab complete will insert the best matching suggestion when pressing tab.",
        "tabCompletion.off": "Disable tab completions.",
        "tabCompletion.onlySnippets": "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
        "tabCompletion": "Enables tab completions.",
        "useTabStops": "Inserting and deleting whitespace follows tab stops.",
        "wordSeparators": "Characters that will be used as word separators when doing word related navigations or operations.",
        "wordWrap.off": "Baris tidak akan di-wrap.",
        "wordWrap.on": "Baris akan di-wrap berdasarkan lebar jendela editor.",
        "wordWrap.wordWrapColumn": "Lines will wrap at `#editor.wordWrapColumn#`.",
        "wordWrap.bounded": "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
        "wordWrap": "Controls how lines should wrap.",
        "wordWrapColumn": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
        "wrappingIndent.none": "No indentation. Wrapped lines begin at column 1.",
        "wrappingIndent.same": "Wrapped lines get the same indentation as the parent.",
        "wrappingIndent.indent": "Wrapped lines get +1 indentation toward the parent.",
        "wrappingIndent.deepIndent": "Wrapped lines get +2 indentation toward the parent.",
        "wrappingIndent": "Controls the indentation of wrapped lines.",
        "wrappingStrategy.simple": "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
        "wrappingStrategy.advanced": "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.",
        "wrappingStrategy": "Controls the algorithm that computes wrapping points."
    },
    "vs/editor/common/model/editStack": {
        "edit": "Typing"
    },
    "vs/editor/common/modes/modesRegistry": {
        "plainText.alias": "teks biasa"
    },
    "vs/editor/common/services/modelServiceImpl": {
        "undoRedoConfirm": "Keep the undo-redo stack for {0} in memory ({1} MB)?",
        "nok": "Discard",
        "ok": "Keep"
    },
    "vs/editor/common/standaloneStrings": {
        "noSelection": "No selection",
        "singleSelectionRange": "Line {0}, Column {1} ({2} selected)",
        "singleSelection": "Line {0}, Column {1}",
        "multiSelectionRange": "{0} selections ({1} characters selected)",
        "multiSelection": "{0} selections",
        "emergencyConfOn": "Now changing the setting `accessibilitySupport` to 'on'.",
        "openingDocs": "Now opening the Editor Accessibility documentation page.",
        "readonlyDiffEditor": " in a read-only pane of a diff editor.",
        "editableDiffEditor": " in a pane of a diff editor.",
        "readonlyEditor": " in a read-only code editor",
        "editableEditor": " in a code editor",
        "changeConfigToOnMac": "To configure the editor to be optimized for usage with a Screen Reader press Command+E now.",
        "changeConfigToOnWinLinux": "To configure the editor to be optimized for usage with a Screen Reader press Control+E now.",
        "auto_on": "The editor is configured to be optimized for usage with a Screen Reader.",
        "auto_off": "The editor is configured to never be optimized for usage with a Screen Reader, which is not the case at this time.",
        "tabFocusModeOnMsg": "Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.",
        "tabFocusModeOnMsgNoKb": "Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
        "tabFocusModeOffMsg": "Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.",
        "tabFocusModeOffMsgNoKb": "Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.",
        "openDocMac": "Press Command+H now to open a browser window with more information related to editor accessibility.",
        "openDocWinLinux": "Press Control+H now to open a browser window with more information related to editor accessibility.",
        "outroMsg": "You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.",
        "showAccessibilityHelpAction": "Show Accessibility Help",
        "inspectTokens": "Developer: Inspect Tokens",
        "gotoLineActionLabel": "Go to Line/Column...",
        "helpQuickAccess": "Show all Quick Access Providers",
        "quickCommandActionLabel": "Command Palette",
        "quickCommandActionHelp": "Show And Run Commands",
        "quickOutlineActionLabel": "Go to Symbol...",
        "quickOutlineByCategoryActionLabel": "Go to Symbol by Category...",
        "editorViewAccessibleLabel": "Isi editor",
        "accessibilityHelpMessage": "Press Alt+F1 for Accessibility Options.",
        "toggleHighContrast": "Toggle High Contrast Theme",
        "bulkEditServiceSummary": "Melakukan {0} suntingan dalam {1} file"
    },
    "vs/editor/common/view/editorColorRegistry": {
        "lineHighlight": "Warna latar belakang untuk baris yang disorot pada posisi kursor.",
        "lineHighlightBorderBox": "Warna latar belakang untuk tepi sekitar baris pada posisi kursor.",
        "rangeHighlight": "Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.",
        "rangeHighlightBorder": "Warna latar belakang ditepi area tersorot.",
        "symbolHighlight": "Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.",
        "symbolHighlightBorder": "Background color of the border around highlighted symbols.",
        "caret": "Warna kursor editor.",
        "editorCursorBackground": "Warna latar belakang kursor. Memungkinkan penyesuaian warna karakter yang bertumpukan dengan blok kursor.",
        "editorWhitespaces": "Warna karakter spasi pada editor.",
        "editorIndentGuides": "Warna penanda indentasi di editor.",
        "editorActiveIndentGuide": "Warna penanda indentasi di editor yang aktif.",
        "editorLineNumbers": "Warna nomor baris pada editor.",
        "editorActiveLineNumber": "Warna nomor baris yang aktif pada editor",
        "deprecatedEditorActiveLineNumber": "Id telah usang. Sebaiknya gunakan 'editorLineNumber.activeForeground'.",
        "editorRuler": "Warna penggaris pada editor.",
        "editorCodeLensForeground": "Warna latar depan pada lensa kode editor ",
        "editorBracketMatchBackground": "Warna latar dibelakang untuk kurung yang sesuai",
        "editorBracketMatchBorder": "Warna untuk area kurung yang sesuai",
        "editorOverviewRulerBorder": "Warna garis tepi penggaris pada ikhtisar.",
        "editorGutter": "Warna latar belakang editor pada Tepi Editor. Tepi Editor adalah sisi kiri editor berisi simbol dan nomor baris kode.",
        "unnecessaryCodeBorder": "Border color of unnecessary (unused) source code in the editor.",
        "unnecessaryCodeOpacity": "Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  'editorUnnecessaryCode.border' theme color to underline unnecessary code instead of fading it out.",
        "overviewRulerRangeHighlight": "Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.",
        "overviewRuleError": "Ikhtisar warna penanda penggaris untuk kesalahan.",
        "overviewRuleWarning": "Ikhtisar warna penanda penggaris untuk peringatan.",
        "overviewRuleInfo": "Ikhtisar warna penanda penggaris untuk informasi."
    },
    "vs/editor/contrib/bracketMatching/bracketMatching": {
        "overviewRulerBracketMatchForeground": "Warna ikhtisar garis penanda untuk mencocokkan kurung kurawal.",
        "smartSelect.jumpBracket": "Pergi ke Kurawal",
        "smartSelect.selectToBracket": "Pilih untuk kurung kurawal.",
        "miGoToBracket": "Go to &&Bracket"
    },
    "vs/editor/contrib/caretOperations/caretOperations": {
        "caret.moveLeft": "Move Selected Text Left",
        "caret.moveRight": "Move Selected Text Right"
    },
    "vs/editor/contrib/caretOperations/transpose": {
        "transposeLetters.label": "Ubah urutan huruf"
    },
    "vs/editor/contrib/clipboard/clipboard": {
        "actions.clipboard.cutLabel": "Potong",
        "miCut": "Cu&&t",
        "actions.clipboard.copyLabel": "Salin",
        "miCopy": "&&Copy",
        "actions.clipboard.pasteLabel": "Tempel",
        "miPaste": "&&Paste",
        "actions.clipboard.copyWithSyntaxHighlightingLabel": "Salin dengan penyorotan sintaks"
    },
    "vs/editor/contrib/codeAction/codeActionCommands": {
        "args.schema.kind": "Kind of the code action to run.",
        "args.schema.apply": "Controls when the returned actions are applied.",
        "args.schema.apply.first": "Always apply the first returned code action.",
        "args.schema.apply.ifSingle": "Apply the first returned code action if it is the only one.",
        "args.schema.apply.never": "Do not apply the returned code actions.",
        "args.schema.preferred": "Controls if only preferred code actions should be returned.",
        "applyCodeActionFailed": "An unknown error occurred while applying the code action",
        "quickfix.trigger.label": "Quick Fix...",
        "editor.action.quickFix.noneMessage": "No code actions available",
        "editor.action.codeAction.noneMessage.preferred.kind": "No preferred code actions for '{0}' available",
        "editor.action.codeAction.noneMessage.kind": "No code actions for '{0}' available",
        "editor.action.codeAction.noneMessage.preferred": "No preferred code actions available",
        "editor.action.codeAction.noneMessage": "No code actions available",
        "refactor.label": "Refactor...",
        "editor.action.refactor.noneMessage.preferred.kind": "No preferred refactorings for '{0}' available",
        "editor.action.refactor.noneMessage.kind": "No refactorings for '{0}' available",
        "editor.action.refactor.noneMessage.preferred": "No preferred refactorings available",
        "editor.action.refactor.noneMessage": "No refactorings available",
        "source.label": "Source Action...",
        "editor.action.source.noneMessage.preferred.kind": "No preferred source actions for '{0}' available",
        "editor.action.source.noneMessage.kind": "No source actions for '{0}' available",
        "editor.action.source.noneMessage.preferred": "No preferred source actions available",
        "editor.action.source.noneMessage": "No source actions available",
        "organizeImports.label": "Organize Imports",
        "editor.action.organize.noneMessage": "No organize imports action available",
        "fixAll.label": "Fix All",
        "fixAll.noneMessage": "No fix all action available",
        "autoFix.label": "Auto Fix...",
        "editor.action.autoFix.noneMessage": "No auto fixes available"
    },
    "vs/editor/contrib/codeAction/lightBulbWidget": {
        "prefferedQuickFixWithKb": "Show Fixes. Preferred Fix Available ({0})",
        "quickFixWithKb": "Tampilkan perbaikan ({0})",
        "quickFix": "Tampilkan perbaikan"
    },
    "vs/editor/contrib/codelens/codelensController": {
        "showLensOnLine": "Show Code Lens Commands For Current Line"
    },
    "vs/editor/contrib/comment/comment": {
        "comment.line": "Beralih baris komentar",
        "miToggleLineComment": "&&Toggle Line Comment",
        "comment.line.add": "Tambahkan Baris Komentar",
        "comment.line.remove": "Hapus Baris Komentar",
        "comment.block": "Toggle Block Comment",
        "miToggleBlockComment": "Toggle &&Block Comment"
    },
    "vs/editor/contrib/contextmenu/contextmenu": {
        "action.showContextMenu.label": "Tampilkan menu konteks editor"
    },
    "vs/editor/contrib/cursorUndo/cursorUndo": {
        "cursor.undo": "Kursor membatalkan",
        "cursor.redo": "Cursor Redo"
    },
    "vs/editor/contrib/find/findController": {
        "startFindAction": "Temukan",
        "miFind": "&&Find",
        "startFindWithSelectionAction": "Find With Selection",
        "findNextMatchAction": "Cari berikutnya",
        "findPreviousMatchAction": "Cari sebelumnya",
        "nextSelectionMatchFindAction": "Temukan Seleksi Berikutnya",
        "previousSelectionMatchFindAction": "Temukan Seleksi Sebelumnya",
        "startReplace": "Ganti",
        "miReplace": "&&Replace"
    },
    "vs/editor/contrib/find/findWidget": {
        "label.find": "Temukan",
        "placeholder.find": "Temukan",
        "label.previousMatchButton": "Hasil sebelumnya",
        "label.nextMatchButton": "Hasil berikutnya",
        "label.toggleSelectionFind": "Cari dalam pilihan",
        "label.closeButton": "Tutup",
        "label.replace": "Ganti",
        "placeholder.replace": "Ganti",
        "label.replaceButton": "Ganti",
        "label.replaceAllButton": "Ganti semua",
        "label.toggleReplaceButton": "Toggle Replace mode",
        "title.matchesCountLimit": "Only the first {0} results are highlighted, but all find operations work on the entire text.",
        "label.matchesLocation": "{0} dari {1}",
        "label.noResults": "Tidak ada hasil",
        "ariaSearchNoResultEmpty": "{0} found",
        "ariaSearchNoResult": "{0} found for '{1}'",
        "ariaSearchNoResultWithLineNum": "{0} found for '{1}', at {2}",
        "ariaSearchNoResultWithLineNumNoCurrentMatch": "{0} found for '{1}'",
        "ctrlEnter.keybindingChanged": "Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior."
    },
    "vs/editor/contrib/folding/folding": {
        "unfoldAction.label": "Membuka",
        "unFoldRecursivelyAction.label": "Membuka Secara Rekursif",
        "foldAction.label": "Lipat",
        "toggleFoldAction.label": "Toggle Fold",
        "foldRecursivelyAction.label": "Lipat Secara Rekursif",
        "foldAllBlockComments.label": "Lipat semua blok komentar",
        "foldAllMarkerRegions.label": "Lipat semua wilayah",
        "unfoldAllMarkerRegions.label": "Buka semua wilayah",
        "foldAllAction.label": "Lipat Semua",
        "unfoldAllAction.label": "Membuka Semua",
        "foldLevelAction.label": "Fold Level {0}",
        "foldBackgroundBackground": "Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."
    },
    "vs/editor/contrib/fontZoom/fontZoom": {
        "EditorFontZoomIn.label": "Editor Font Zoom In",
        "EditorFontZoomOut.label": "Editor Font Zoom Out",
        "EditorFontZoomReset.label": "Editor Font Zoom Reset"
    },
    "vs/editor/contrib/format/format": {
        "hint11": "Made 1 formatting edit on line {0}",
        "hintn1": "Made {0} formatting edits on line {1}",
        "hint1n": "Made 1 formatting edit between lines {0} and {1}",
        "hintnn": "Made {0} formatting edits between lines {1} and {2}"
    },
    "vs/editor/contrib/format/formatActions": {
        "formatDocument.label": "Format Dokumen",
        "formatSelection.label": "Format Pilihan"
    },
    "vs/editor/contrib/gotoError/gotoError": {
        "markerAction.next.label": "Go to Next Problem (Error, Warning, Info)",
        "markerAction.previous.label": "Go to Previous Problem (Error, Warning, Info)",
        "markerAction.nextInFiles.label": "Go to Next Problem in Files (Error, Warning, Info)",
        "markerAction.previousInFiles.label": "Go to Previous Problem in Files (Error, Warning, Info)",
        "miGotoNextProblem": "Next &&Problem",
        "miGotoPreviousProblem": "Previous &&Problem"
    },
    "vs/editor/contrib/gotoError/gotoErrorWidget": {
        "Error": "Kesalahan",
        "Warning": "Peringatan",
        "Info": "Info",
        "Hint": "Hint",
        "marker aria": "{0} at {1}. ",
        "problems": "{0} of {1} problems",
        "change": "{0} of {1} problem",
        "editorMarkerNavigationError": "Editor marker navigation widget error color.",
        "editorMarkerNavigationWarning": "Editor marker navigation widget warning color.",
        "editorMarkerNavigationInfo": "Editor marker navigation widget info color.",
        "editorMarkerNavigationBackground": "Editor marker navigation widget background."
    },
    "vs/editor/contrib/gotoSymbol/goToCommands": {
        "peek.submenu": "Peek",
        "def.title": "Definitions",
        "noResultWord": "Definisi untuk '{0}' tidak ditemukan",
        "generic.noResults": "Tidak ada definisi ditemukan",
        "actions.goToDecl.label": "Pergi ke Definisi",
        "miGotoDefinition": "Go to &&Definition",
        "actions.goToDeclToSide.label": "Buka Definisi ke Samping",
        "actions.previewDecl.label": "Intip Definisi",
        "decl.title": "Declarations",
        "decl.noResultWord": "No declaration found for '{0}'",
        "decl.generic.noResults": "No declaration found",
        "actions.goToDeclaration.label": "Go to Declaration",
        "miGotoDeclaration": "Go to &&Declaration",
        "actions.peekDecl.label": "Peek Declaration",
        "typedef.title": "Type Definitions",
        "goToTypeDefinition.noResultWord": "No type definition found for '{0}'",
        "goToTypeDefinition.generic.noResults": "Tidak ada jenis definisi ditemukan",
        "actions.goToTypeDefinition.label": "Pergi ke Jenis Definisi",
        "miGotoTypeDefinition": "Go to &&Type Definition",
        "actions.peekTypeDefinition.label": "Peek Type Definition",
        "impl.title": "Implementations",
        "goToImplementation.noResultWord": "Implementasi untuk '{0}' tidak ditemukan",
        "goToImplementation.generic.noResults": "Tidak ada implementasi ditemukan",
        "actions.goToImplementation.label": "Go to Implementations",
        "miGotoImplementation": "Go to &&Implementations",
        "actions.peekImplementation.label": "Intip Implementasi",
        "references.no": "No references found for '{0}'",
        "references.noGeneric": "No references found",
        "goToReferences.label": "Go to References",
        "miGotoReference": "Go to &&References",
        "ref.title": "Referensi",
        "references.action.label": "Peek References",
        "label.generic": "Go To Any Symbol",
        "generic.title": "Locations",
        "generic.noResult": "No results for '{0}'"
    },
    "vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition": {
        "multipleResults": "Klik untuk menampilkan {0} definisi."
    },
    "vs/editor/contrib/gotoSymbol/peek/referencesController": {
        "labelLoading": "Memuat...",
        "metaTitle.N": "{0} ({1})"
    },
    "vs/editor/contrib/gotoSymbol/peek/referencesTree": {
        "referencesFailre": "Failed to resolve file.",
        "referencesCount": "{0} referensi",
        "referenceCount": "{0} referensi"
    },
    "vs/editor/contrib/gotoSymbol/peek/referencesWidget": {
        "missingPreviewMessage": "Pratinjau tidak tersedia",
        "treeAriaLabel": "Referensi",
        "noResults": "Tidak ada hasil",
        "peekView.alternateTitle": "Referensi"
    },
    "vs/editor/contrib/gotoSymbol/referencesModel": {
        "aria.oneReference": "symbol in {0} on line {1} at column {2}",
        "aria.fileReferences.1": "1 symbol in {0}, full path {1}",
        "aria.fileReferences.N": "{0} symbols in {1}, full path {2}",
        "aria.result.0": "No results found",
        "aria.result.1": "Found 1 symbol in {0}",
        "aria.result.n1": "Found {0} symbols in {1}",
        "aria.result.nm": "Found {0} symbols in {1} files"
    },
    "vs/editor/contrib/gotoSymbol/symbolNavigation": {
        "location.kb": "Symbol {0} of {1}, {2} for next",
        "location": "Symbol {0} of {1}"
    },
    "vs/editor/contrib/hover/hover": {
        "showHover": "Tampilkan hover",
        "showDefinitionPreviewHover": "Show Definition Preview Hover"
    },
    "vs/editor/contrib/hover/modesContentHover": {
        "modesContentHover.loading": "Memuat...",
        "peek problem": "Peek Problem",
        "titleAndKb": "{0} ({1})",
        "checkingForQuickFixes": "Checking for quick fixes...",
        "noQuickFixes": "No quick fixes available",
        "quick fixes": "Quick Fix..."
    },
    "vs/editor/contrib/indentation/indentation": {
        "indentationToSpaces": "Convert Indentation to Spaces",
        "indentationToTabs": "Convert Indentation to Tabs",
        "configuredTabSize": "Configured Tab Size",
        "selectTabWidth": "Select Tab Size for Current File",
        "indentUsingTabs": "Indent Using Tabs",
        "indentUsingSpaces": "Indent Using Spaces",
        "detectIndentation": "Detect Indentation from Content",
        "editor.reindentlines": "Indentasi ulang baris",
        "editor.reindentselectedlines": "Reindent Selected Lines"
    },
    "vs/editor/contrib/inPlaceReplace/inPlaceReplace": {
        "InPlaceReplaceAction.previous.label": "Replace with Previous Value",
        "InPlaceReplaceAction.next.label": "Replace with Next Value"
    },
    "vs/editor/contrib/linesOperations/linesOperations": {
        "lines.copyUp": "Salin Baris Ke Atas",
        "miCopyLinesUp": "&&Copy Line Up",
        "lines.copyDown": "Salin Baris Ke Bawah",
        "miCopyLinesDown": "Co&&py Line Down",
        "duplicateSelection": "Duplicate Selection",
        "miDuplicateSelection": "&&Duplicate Selection",
        "lines.moveUp": "Pindahkan Baris Ke Atas",
        "miMoveLinesUp": "Mo&&ve Line Up",
        "lines.moveDown": "Pindahkan Baris Ke Bawah",
        "miMoveLinesDown": "Move &&Line Down",
        "lines.sortAscending": "Urutkan baris menaik",
        "lines.sortDescending": "Urutkan baris menurun",
        "lines.trimTrailingWhitespace": "Hapus spasi beruntun",
        "lines.delete": "Hapus baris",
        "lines.indent": "Indentasi baris",
        "lines.outdent": "Outdent Line",
        "lines.insertBefore": "Menyisipkan baris di atas",
        "lines.insertAfter": "Insert Line Below",
        "lines.deleteAllLeft": "Delete All Left",
        "lines.deleteAllRight": "Delete All Right",
        "lines.joinLines": "Gabungkan baris",
        "editor.transpose": "Transpose characters around the cursor",
        "editor.transformToUppercase": "Ubah ke huruf kapital",
        "editor.transformToLowercase": "Ubah ke huruf kecil",
        "editor.transformToTitlecase": "Transform to Title Case"
    },
    "vs/editor/contrib/links/links": {
        "links.navigate.executeCmd": "Eksekusi perintah",
        "links.navigate.follow": "Follow link",
        "links.navigate.kb.meta.mac": "cmd + click",
        "links.navigate.kb.meta": "Ctrl + klik",
        "links.navigate.kb.alt.mac": "option + click",
        "links.navigate.kb.alt": "alt + click",
        "invalid.url": "Failed to open this link because it is not well-formed: {0}",
        "missing.url": "Failed to open this link because its target is missing.",
        "label": "Buka Tautan"
    },
    "vs/editor/contrib/message/messageController": {
        "editor.readonly": "Cannot edit in read-only editor"
    },
    "vs/editor/contrib/multicursor/multicursor": {
        "mutlicursor.insertAbove": "Add Cursor Above",
        "miInsertCursorAbove": "&&Add Cursor Above",
        "mutlicursor.insertBelow": "Tambah Kursor Dibawah",
        "miInsertCursorBelow": "A&&dd Cursor Below",
        "mutlicursor.insertAtEndOfEachLineSelected": "Add Cursors to Line Ends",
        "miInsertCursorAtEndOfEachLineSelected": "Add C&&ursors to Line Ends",
        "mutlicursor.addCursorsToBottom": "Add Cursors To Bottom",
        "mutlicursor.addCursorsToTop": "Add Cursors To Top",
        "addSelectionToNextFindMatch": "Add Selection To Next Find Match",
        "miAddSelectionToNextFindMatch": "Add &&Next Occurrence",
        "addSelectionToPreviousFindMatch": "Add Selection To Previous Find Match",
        "miAddSelectionToPreviousFindMatch": "Add P&&revious Occurrence",
        "moveSelectionToNextFindMatch": "Move Last Selection To Next Find Match",
        "moveSelectionToPreviousFindMatch": "Move Last Selection To Previous Find Match",
        "selectAllOccurrencesOfFindMatch": "Select All Occurrences of Find Match",
        "miSelectHighlights": "Select All &&Occurrences",
        "changeAll.label": "Change All Occurrences"
    },
    "vs/editor/contrib/parameterHints/parameterHints": {
        "parameterHints.trigger.label": "Trigger Parameter Hints"
    },
    "vs/editor/contrib/parameterHints/parameterHintsWidget": {
        "hint": "{0}, petunjuk"
    },
    "vs/editor/contrib/peekView/peekView": {
        "label.close": "Tutup",
        "peekViewTitleBackground": "Background color of the peek view title area.",
        "peekViewTitleForeground": "Color of the peek view title.",
        "peekViewTitleInfoForeground": "Warna info judul tampilan lihat.",
        "peekViewBorder": "Color of the peek view borders and arrow.",
        "peekViewResultsBackground": "Background color of the peek view result list.",
        "peekViewResultsMatchForeground": "Foreground color for line nodes in the peek view result list.",
        "peekViewResultsFileForeground": "Foreground color for file nodes in the peek view result list.",
        "peekViewResultsSelectionBackground": "Background color of the selected entry in the peek view result list.",
        "peekViewResultsSelectionForeground": "Foreground color of the selected entry in the peek view result list.",
        "peekViewEditorBackground": "Background color of the peek view editor.",
        "peekViewEditorGutterBackground": "Background color of the gutter in the peek view editor.",
        "peekViewResultsMatchHighlight": "Match highlight color in the peek view result list.",
        "peekViewEditorMatchHighlight": "Match highlight color in the peek view editor.",
        "peekViewEditorMatchHighlightBorder": "Match highlight border in the peek view editor."
    },
    "vs/editor/contrib/quickAccess/gotoLineQuickAccess": {
        "cannotRunGotoLine": "Open a text editor first to go to a line.",
        "gotoLineColumnLabel": "Go to line {0} and column {1}.",
        "gotoLineLabel": "Go to line {0}.",
        "gotoLineLabelEmptyWithLimit": "Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",
        "gotoLineLabelEmpty": "Current Line: {0}, Character: {1}. Type a line number to navigate to."
    },
    "vs/editor/contrib/quickAccess/gotoSymbolQuickAccess": {
        "cannotRunGotoSymbolWithoutEditor": "To go to a symbol, first open a text editor with symbol information.",
        "cannotRunGotoSymbolWithoutSymbolProvider": "The active text editor does not provide symbol information.",
        "openToSide": "Open to the Side",
        "openToBottom": "Open to the Bottom",
        "symbols": "symbols ({0})",
        "property": "properties ({0})",
        "method": "methods ({0})",
        "function": "functions ({0})",
        "_constructor": "constructors ({0})",
        "variable": "variables ({0})",
        "class": "classes ({0})",
        "struct": "structs ({0})",
        "event": "events ({0})",
        "operator": "operators ({0})",
        "interface": "interfaces ({0})",
        "namespace": "namespaces ({0})",
        "package": "packages ({0})",
        "typeParameter": "type parameters ({0})",
        "modules": "modules ({0})",
        "enum": "enumerations ({0})",
        "enumMember": "enumeration members ({0})",
        "string": "strings ({0})",
        "file": "files ({0})",
        "array": "arrays ({0})",
        "number": "numbers ({0})",
        "boolean": "booleans ({0})",
        "object": "objects ({0})",
        "key": "keys ({0})",
        "field": "fields ({0})",
        "constant": "constants ({0})"
    },
    "vs/editor/contrib/rename/rename": {
        "no result": "Tidak ada hasil.",
        "resolveRenameLocationFailed": "An unknown error occurred while resolving rename location",
        "label": "Renaming '{0}'",
        "quotableLabel": "Renaming {0}",
        "aria": "Successfully renamed '{0}' to '{1}'. Summary: {2}",
        "rename.failedApply": "Rename failed to apply edits",
        "rename.failed": "Rename failed to compute edits",
        "rename.label": "Rename Symbol",
        "enablePreview": "Enable/disable the ability to preview changes before renaming"
    },
    "vs/editor/contrib/rename/renameInputField": {
        "renameAriaLabel": "Rename input. Type new name and press Enter to commit.",
        "label": "{0} to Rename, {1} to Preview"
    },
    "vs/editor/contrib/smartSelect/smartSelect": {
        "smartSelect.expand": "Expand Selection",
        "miSmartSelectGrow": "&&Expand Selection",
        "smartSelect.shrink": "Shrink Selection",
        "miSmartSelectShrink": "&&Shrink Selection"
    },
    "vs/editor/contrib/snippet/snippetVariables": {
        "Sunday": "Sunday",
        "Monday": "Monday",
        "Tuesday": "Tuesday",
        "Wednesday": "Wednesday",
        "Thursday": "Thursday",
        "Friday": "Friday",
        "Saturday": "Saturday",
        "SundayShort": "Min",
        "MondayShort": "Sen",
        "TuesdayShort": "Sel",
        "WednesdayShort": "Rab",
        "ThursdayShort": "Kam",
        "FridayShort": "Jum",
        "SaturdayShort": "Sab",
        "January": "January",
        "February": "February",
        "March": "March",
        "April": "April",
        "May": "Mei",
        "June": "June",
        "July": "July",
        "August": "August",
        "September": "September",
        "October": "October",
        "November": "November",
        "December": "December",
        "JanuaryShort": "Jan",
        "FebruaryShort": "Feb",
        "MarchShort": "Mar",
        "AprilShort": "Apr",
        "MayShort": "Mei",
        "JuneShort": "Jun",
        "JulyShort": "Jul",
        "AugustShort": "Aug",
        "SeptemberShort": "Sep",
        "OctoberShort": "Oct",
        "NovemberShort": "Nov",
        "DecemberShort": "Dec"
    },
    "vs/editor/contrib/suggest/suggestController": {
        "arai.alert.snippet": "Accepting '{0}' made {1} additional edits",
        "suggest.trigger.label": "Trigger Suggest",
        "accept.accept": "{0} to insert",
        "accept.insert": "{0} to insert",
        "accept.replace": "{0} to replace",
        "detail.more": "show less",
        "detail.less": "show more"
    },
    "vs/editor/contrib/suggest/suggestWidget": {
        "editorSuggestWidgetBackground": "Background color of the suggest widget.",
        "editorSuggestWidgetBorder": "Border color of the suggest widget.",
        "editorSuggestWidgetForeground": "Foreground color of the suggest widget.",
        "editorSuggestWidgetSelectedBackground": "Background color of the selected entry in the suggest widget.",
        "editorSuggestWidgetHighlightForeground": "Color of the match highlights in the suggest widget.",
        "readMore": "Baca lebih lanjut...{0}",
        "readLess": "Baca lebih sedikit...{0}",
        "loading": "Memuat...",
        "suggestWidget.loading": "Memuat...",
        "suggestWidget.noSuggestions": "Tidak ada saran.",
        "ariaCurrenttSuggestionReadDetails": "Item {0}, docs: {1}"
    },
    "vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode": {
        "toggle.tabMovesFocus": "Toggle Tab Key Moves Focus",
        "toggle.tabMovesFocus.on": "Pressing Tab will now move focus to the next focusable element",
        "toggle.tabMovesFocus.off": "Pressing Tab will now insert the tab character"
    },
    "vs/editor/contrib/tokenization/tokenization": {
        "forceRetokenize": "Developer: Force Retokenize"
    },
    "vs/editor/contrib/wordHighlighter/wordHighlighter": {
        "wordHighlight": "Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.",
        "wordHighlightStrong": "Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.",
        "wordHighlightBorder": "Border color of a symbol during read-access, like reading a variable.",
        "wordHighlightStrongBorder": "Border color of a symbol during write-access, like writing to a variable.",
        "overviewRulerWordHighlightForeground": "Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.",
        "overviewRulerWordHighlightStrongForeground": "Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.",
        "wordHighlight.next.label": "Go to Next Symbol Highlight",
        "wordHighlight.previous.label": "Go to Previous Symbol Highlight",
        "wordHighlight.trigger.label": "Sorot simbol trigger"
    },
    "vs/platform/actions/browser/menuEntryActionViewItem": {
        "titleAndKb": "{0} ({1})"
    },
    "vs/platform/configuration/common/configurationRegistry": {
        "defaultConfigurations.title": "Timpa konfigurasi bawaan",
        "overrideSettings.description": "Konfigurasikan pengaturan editor untuk diganti menggunakan bahasa {0}.",
        "overrideSettings.defaultDescription": "Konfigurasikan pengaturan editor untuk diganti menggunakan sebuah bahasa.",
        "overrideSettings.errorMessage": "This setting does not support per-language configuration.",
        "config.property.languageDefault": "Tidak dapat mendaftarkan '{0}'.  Ini sesuai dengan pola properti '\\\\[.*\\\\]$'  untuk mendeskripsikan pengaturan editor bahasa yang spesifik. Gunakan kontribusi 'configurationDefaults'.",
        "config.property.duplicate": "Tidak dapat mendaftarkan '{0}'. Properti ini telah didaftarkan."
    },
    "vs/platform/dialogs/common/dialogs": {
        "moreFile": "...1 berkas tambahan tidak ditampilkan",
        "moreFiles": "...{0} berkas tambahan tidak ditampilkan"
    },
    "vs/platform/files/common/files": {
        "unknownError": "Unknown Error"
    },
    "vs/platform/keybinding/common/abstractKeybindingService": {
        "first.chord": "({0}) telah ditekan. Menunggu kombinasi tombol kedua...",
        "missing.chord": "Kombinasi tombol ({0}, {1}) bukanlah sebuah perintah."
    },
    "vs/platform/label/common/label": {
        "untitledWorkspace": "Tanpa Nama (Ruang Kerja)",
        "workspaceName": "{0} (Ruang Kerja)"
    },
    "vs/platform/list/browser/listService": {
        "workbenchConfigurationTitle": "Workbench",
        "multiSelectModifier.ctrlCmd": "Petakan ke `Control` pada Windows dan Linux, dan `Command` pada macOS.",
        "multiSelectModifier.alt": "Petakan untuk `Alt` pada Windows dan Linux dan untuk `Option` pada macOS.",
        "multiSelectModifier": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
        "openModeModifier": "Controls how to open items in trees and lists using the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. ",
        "horizontalScrolling setting": "Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
        "tree horizontalScrolling setting": "Controls whether trees support horizontal scrolling in the workbench.",
        "deprecated": "This setting is deprecated, please use '{0}' instead.",
        "tree indent setting": "Controls tree indentation in pixels.",
        "render tree indent guides": "Controls whether the tree should render indent guides.",
        "keyboardNavigationSettingKey.simple": "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
        "keyboardNavigationSettingKey.highlight": "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
        "keyboardNavigationSettingKey.filter": "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.",
        "keyboardNavigationSettingKey": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
        "automatic keyboard navigation setting": "Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut."
    },
    "vs/platform/markers/common/markers": {
        "sev.error": "Kesalahan",
        "sev.warning": "Peringatan",
        "sev.info": "Info"
    },
    "vs/platform/quickinput/browser/commandsQuickAccess": {
        "commandPickAriaLabelWithKeybinding": "{0}, {1}",
        "recentlyUsed": "recently used",
        "morecCommands": "other commands",
        "canNotRun": "Command '{0}' resulted in an error ({1})"
    },
    "vs/platform/quickinput/browser/helpQuickAccess": {
        "globalCommands": "perintah global",
        "editorCommands": "editor commands",
        "helpPickAriaLabel": "{0}, {1}"
    },
    "vs/platform/theme/common/colorRegistry": {
        "foreground": "Warna latar keseluruhan. Hanya digunakan jika tidak ditimpa oleh komponen.",
        "errorForeground": "Warna latar pesan kesalahan. Hanya digunakan jika tidak ditimpa oleh komponen.",
        "descriptionForeground": "Warna latar depan untuk teks yang memberikan informasi tambahan, misalnya sebuah label.",
        "iconForeground": "The default color for icons in the workbench.",
        "focusBorder": "Warna latar elemen yang sedang fokus. Hanya digunakan jika tidak ditimpa oleh komponen.",
        "contrastBorder": "Garis tepi tambahan pada elemen untuk memisahkan mereka dari elemen lain agar kontras lebih besar.",
        "activeContrastBorder": "Garis tepi tambahan pada elemen aktif untuk memisahkan mereka dari elemen lain agar kontras lebih besar.",
        "selectionBackground": "The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.",
        "textSeparatorForeground": "Warna untuk pemisah teks.",
        "textLinkForeground": "Warna latar depan untuk tautan pada teks.",
        "textLinkActiveForeground": "Foreground color for links in text when clicked on and on mouse hover.",
        "textPreformatForeground": "Foreground color for preformatted text segments.",
        "textBlockQuoteBackground": "Background color for block quotes in text.",
        "textBlockQuoteBorder": "Border color for block quotes in text.",
        "textCodeBlockBackground": "Background color for code blocks in text.",
        "widgetShadow": "Shadow color of widgets such as find/replace inside the editor.",
        "inputBoxBackground": "Latar belakang kotak input.",
        "inputBoxForeground": "Latar depan kotak input.",
        "inputBoxBorder": "Garis tepi kotak input.",
        "inputBoxActiveOptionBorder": "Garis tepi opsi yang aktif di bidang input.",
        "inputOption.activeBackground": "Background color of activated options in input fields.",
        "inputPlaceholderForeground": "Input box foreground color for placeholder text.",
        "inputValidationInfoBackground": "Warna latar belakang input validation untuk informasi tingkat keparahan.",
        "inputValidationInfoForeground": "Input validation foreground color for information severity.",
        "inputValidationInfoBorder": "Input validation border color for information severity.",
        "inputValidationWarningBackground": "Input validation background color for warning severity.",
        "inputValidationWarningForeground": "Input validation foreground color for warning severity.",
        "inputValidationWarningBorder": "Input validation border color for warning severity.",
        "inputValidationErrorBackground": "Input validation background color for error severity.",
        "inputValidationErrorForeground": "Input validation foreground color for error severity.",
        "inputValidationErrorBorder": "Input validation border color for error severity.",
        "dropdownBackground": "Latar belakang menu pilihan menurun.",
        "dropdownListBackground": "Dropdown list background.",
        "dropdownForeground": "Latar menu pilihan menurun.",
        "dropdownBorder": "Garis tepi menu pilihan menurun.",
        "checkbox.background": "Background color of checkbox widget.",
        "checkbox.foreground": "Foreground color of checkbox widget.",
        "checkbox.border": "Border color of checkbox widget.",
        "buttonForeground": "Warna latar tombol.",
        "buttonBackground": "Warna latar belakang tombol.",
        "buttonHoverBackground": "Warna latar belakang tombol saat melayang.",
        "badgeBackground": "Badge background color. Badges are small information labels, e.g. for search results count.",
        "badgeForeground": "Badge foreground color. Badges are small information labels, e.g. for search results count.",
        "scrollbarShadow": "Scrollbar shadow to indicate that the view is scrolled.",
        "scrollbarSliderBackground": "Scrollbar slider background color.",
        "scrollbarSliderHoverBackground": "Scrollbar slider background color when hovering.",
        "scrollbarSliderActiveBackground": "Scrollbar slider background color when clicked on.",
        "progressBarBackground": "Background color of the progress bar that can show for long running operations.",
        "editorError.foreground": "Warna latar depan dari garis bergelombang penunjuk kesalahan pada editor.",
        "errorBorder": "Border color of error boxes in the editor.",
        "editorWarning.foreground": "Warna latar depan dari garis bergelombang penunjuk peringatan pada editor.",
        "warningBorder": "Border color of warning boxes in the editor.",
        "editorInfo.foreground": "Warna latar depan dari garis bergelombang penunjuk informasi pada editor.",
        "infoBorder": "Border color of info boxes in the editor.",
        "editorHint.foreground": "Warna latar depan dari petunjuk squigglies di editor.",
        "hintBorder": "Border color of hint boxes in the editor.",
        "editorBackground": "Warna latar belakang editor",
        "editorForeground": "Warna latar depan default editor",
        "editorWidgetBackground": "Background color of editor widgets, such as find/replace.",
        "editorWidgetForeground": "Foreground color of editor widgets, such as find/replace.",
        "editorWidgetBorder": "Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.",
        "editorWidgetResizeBorder": "Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.",
        "pickerBackground": "Quick picker background color. The quick picker widget is the container for pickers like the command palette.",
        "pickerForeground": "Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.",
        "pickerTitleBackground": "Quick picker title background color. The quick picker widget is the container for pickers like the command palette.",
        "pickerGroupForeground": "Quick picker color for grouping labels.",
        "pickerGroupBorder": "Quick picker color for grouping borders.",
        "editorSelectionBackground": "Color of the editor selection.",
        "editorSelectionForeground": "Color of the selected text for high contrast.",
        "editorInactiveSelection": "Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.",
        "editorSelectionHighlight": "Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.",
        "editorSelectionHighlightBorder": "Border color for regions with the same content as the selection.",
        "editorFindMatch": "Color of the current search match.",
        "findMatchHighlight": "Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.",
        "findRangeHighlight": "Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.",
        "editorFindMatchBorder": "Border color of the current search match.",
        "findMatchHighlightBorder": "Border color of the other search matches.",
        "findRangeHighlightBorder": "Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.",
        "searchEditor.queryMatch": "Color of the Search Editor query matches.",
        "searchEditor.editorFindMatchBorder": "Border color of the Search Editor query matches.",
        "hoverHighlight": "Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.",
        "hoverBackground": "Background color of the editor hover.",
        "hoverForeground": "Foreground color of the editor hover.",
        "hoverBorder": "Border color of the editor hover.",
        "statusBarBackground": "Warna latar belakang bilah status editor pada saat hover.",
        "activeLinkForeground": "Warna tautan aktif.",
        "editorLightBulbForeground": "The color used for the lightbulb actions icon.",
        "editorLightBulbAutoFixForeground": "The color used for the lightbulb auto fix actions icon.",
        "diffEditorInserted": "Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.",
        "diffEditorRemoved": "Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.",
        "diffEditorInsertedOutline": "Outline color for the text that got inserted.",
        "diffEditorRemovedOutline": "Outline color for text that got removed.",
        "diffEditorBorder": "Border color between the two text editors.",
        "listFocusBackground": "Warna latar belakang daftar/pohon untuk item yang difokuskan ketika daftar/pohon aktif. Daftar/pohon yang aktif memiliki fokus papan ketik, daftar/pohon yang tidak aktif tidak memilikinya.",
        "listFocusForeground": "List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
        "listActiveSelectionBackground": "List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
        "listActiveSelectionForeground": "Warna latar depan daftar/pohon untuk item yang difokuskan ketika daftar/pohon aktif. Daftar/pohon yang aktif memiliki fokus papan ketik, daftar/pohon yang tidak aktif tidak memilikinya.",
        "listInactiveSelectionBackground": "Warna latar belakang daftar/pohon untuk item yang difokuskan ketika daftar/pohon aktif. Daftar/pohon yang aktif memiliki fokus papan ketik, daftar/pohon yang tidak aktif tidak memilikinya.",
        "listInactiveSelectionForeground": "List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
        "listInactiveFocusBackground": "List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
        "listHoverBackground": "List/Tree background when hovering over items using the mouse.",
        "listHoverForeground": "List/Tree foreground when hovering over items using the mouse.",
        "listDropBackground": "List/Tree drag and drop background when moving items around using the mouse.",
        "highlight": "List/Tree foreground color of the match highlights when searching inside the list/tree.",
        "invalidItemForeground": "List/Tree foreground color for invalid items, for example an unresolved root in explorer.",
        "listErrorForeground": "Foreground color of list items containing errors.",
        "listWarningForeground": "Foreground color of list items containing warnings.",
        "listFilterWidgetBackground": "Background color of the type filter widget in lists and trees.",
        "listFilterWidgetOutline": "Outline color of the type filter widget in lists and trees.",
        "listFilterWidgetNoMatchesOutline": "Outline color of the type filter widget in lists and trees, when there are no matches.",
        "listFilterMatchHighlight": "Background color of the filtered match.",
        "listFilterMatchHighlightBorder": "Border color of the filtered match.",
        "treeIndentGuidesStroke": "Tree stroke color for the indentation guides.",
        "listDeemphasizedForeground": "List/Tree foreground color for items that are deemphasized. ",
        "menuBorder": "Border color of menus.",
        "menuForeground": "Foreground color of menu items.",
        "menuBackground": "Background color of menu items.",
        "menuSelectionForeground": "Foreground color of the selected menu item in menus.",
        "menuSelectionBackground": "Background color of the selected menu item in menus.",
        "menuSelectionBorder": "Border color of the selected menu item in menus.",
        "menuSeparatorBackground": "Color of a separator menu item in menus.",
        "snippetTabstopHighlightBackground": "Highlight background color of a snippet tabstop.",
        "snippetTabstopHighlightBorder": "Highlight border color of a snippet tabstop.",
        "snippetFinalTabstopHighlightBackground": "Highlight background color of the final tabstop of a snippet.",
        "snippetFinalTabstopHighlightBorder": "Highlight border color of the final stabstop of a snippet.",
        "breadcrumbsFocusForeground": "Color of focused breadcrumb items.",
        "breadcrumbsBackground": "Background color of breadcrumb items.",
        "breadcrumbsSelectedForegound": "Color of selected breadcrumb items.",
        "breadcrumbsSelectedBackground": "Background color of breadcrumb item picker.",
        "mergeCurrentHeaderBackground": "Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeCurrentContentBackground": "Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeIncomingHeaderBackground": "Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeIncomingContentBackground": "Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeCommonHeaderBackground": "Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeCommonContentBackground": "Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.",
        "mergeBorder": "Border color on headers and the splitter in inline merge-conflicts.",
        "overviewRulerCurrentContentForeground": "Current overview ruler foreground for inline merge-conflicts.",
        "overviewRulerIncomingContentForeground": "Incoming overview ruler foreground for inline merge-conflicts.",
        "overviewRulerCommonContentForeground": "Common ancestor overview ruler foreground for inline merge-conflicts.",
        "overviewRulerFindMatchForeground": "Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.",
        "overviewRulerSelectionHighlightForeground": "Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.",
        "minimapFindMatchHighlight": "Minimap marker color for find matches.",
        "minimapSelectionHighlight": "Minimap marker color for the editor selection.",
        "minimapError": "Minimap marker color for errors.",
        "overviewRuleWarning": "Minimap marker color for warnings.",
        "minimapBackground": "Minimap background color.",
        "minimapSliderBackground": "Minimap slider background color.",
        "minimapSliderHoverBackground": "Minimap slider background color when hovering.",
        "minimapSliderActiveBackground": "Minimap slider background color when clicked on.",
        "problemsErrorIconForeground": "The color used for the problems error icon.",
        "problemsWarningIconForeground": "The color used for the problems warning icon.",
        "problemsInfoIconForeground": "The color used for the problems info icon."
    },
    "vs/platform/theme/common/iconRegistry": {},
    "vs/platform/undoRedo/common/undoRedoService": {
        "externalRemoval": "The following files have been closed: {0}.",
        "noParallelUniverses": "The following files have been modified in an incompatible way: {0}.",
        "cannotWorkspaceUndo": "Could not undo '{0}' across all files. {1}",
        "cannotWorkspaceUndoDueToChanges": "Could not undo '{0}' across all files because changes were made to {1}",
        "confirmWorkspace": "Would you like to undo '{0}' across all files?",
        "ok": "Undo in {0} Files",
        "nok": "Undo this File",
        "cancel": "Batal",
        "cannotWorkspaceRedo": "Could not redo '{0}' across all files. {1}",
        "cannotWorkspaceRedoDueToChanges": "Could not redo '{0}' across all files because changes were made to {1}"
    },
    "vs/platform/workspaces/common/workspaces": {
        "codeWorkspace": "Ruang Kerja Kode"
    }
}};